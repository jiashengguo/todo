datasource db {
    provider = 'postgresql'
    url = env('DATABASE_URL')
}

/*
 * User model
 */
model User {
  id String @id @default(cuid())
  email String @unique
  emailVerified DateTime?
  password String
  name String?
  lists List[]
  todos Todo[]

  // everybody can signup
  @@allow('create', true)

  // can only be updated and deleted by self
  @@allow('read,update,delete', auth() == this)
  }


  model List {
    id String @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    title String
    private Boolean @default(false)
    ownerId String
    owner User @relation(fields: [ownerId], references: [id], onDelete: Cascade)
    todos Todo[]

    // require login
    @@deny('all', auth() == null)
    // owner has full access
    @@allow('all', auth() == owner)

    // can be read by owner or is public 
    @@allow('read', owner == auth() || !private)
}


model Todo {
    id String @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    owner User @relation(fields: [ownerId], references: [id], onDelete: Cascade)
    ownerId String
    list List @relation(fields: [listId], references: [id], onDelete: Cascade)
    listId String
    title String
    completedAt DateTime?

    // require login
    @@deny('all', auth() == null)

    @@allow('read', owner == auth() || !list.private)

    // owner has full access, also space members have full access (if the parent List is not private)
    @@allow('all', list.owner == auth())
}